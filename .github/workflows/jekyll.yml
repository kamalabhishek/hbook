name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  repository_dispatch:
    types: [file-changed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Clear Cache
        run: |
          git clean -ffdx
          rm -rf ~/.bundle
          bundle install

      # - name: Read and fetch data from symlinks
      #   run: |
      #     SYMLINKS=$(find . -type l)
      #     for SYMLINK_PATH in $SYMLINKS; do
      #       echo "symlink path $SYMLINK_PATH"
      #       URL=$(readlink $SYMLINK_PATH)
      #       URL=${URL/github.com/raw.githubusercontent.com}
      #       URL=${URL/blob\//}
      #       FetchedContent=$(curl -s -H "Authorization: token ${{ secrets.TEST }}" $URL)
      #       echo "fetched content: $FetchedContent"
      #       rm $SYMLINK_PATH
      #       echo "$FetchedContent" > $SYMLINK_PATH
      #     done
      - name: Read and fetch data from symlinks
        run: |
          SYMLINKS=$(find . -type l)
          for SYMLINK_PATH in $SYMLINKS; do
            echo "symlink path $SYMLINK_PATH"
            URL=$(readlink $SYMLINK_PATH)

            # Extract owner, repo, and path from the URL
            IFS='/' read -ra URL_PARTS <<< "$URL"
            OWNER="${URL_PARTS[3]}"
            REPO="${URL_PARTS[4]}"
            PATH_IN_REPO="${URL_PARTS[@]:5}"

            # Fetch all files directly under the specified folder
            API_URL="https://api.github.com/repos/$OWNER/$REPO/contents/docs/"
            echo "api-url: $API_URL"
            # FetchedFiles=$(curl -s -H "Authorization: token ${{ secrets.TEST }}" "$API_URL" | jq -r '.[] | select(.type == "file" and .path | endswith(".md")).path')
            FetchedFiles=$(curl -s -H "Authorization: token ${{ secrets.TEST }}" "$API_URL" | jq -r '.[] | select(.type == "file").download_url')
            echo "FetchedFiles: $FetchedFiles"

            # Loop through fetched files and download them
            for FILE_PATH in $FetchedFiles; do
              FILE_URL="https://raw.githubusercontent.com/$OWNER/$REPO/main/$PATH_IN_REPO/$FILE_PATH"
              FetchedContent=$(curl -s -H "Authorization: token ${{ secrets.TEST }}" $FILE_URL)
              echo "fetched content for $FILE_PATH: $FetchedContent"

              # Create the target directory structure
              TARGET_PATH="$SYMLINK_PATH/${FILE_PATH#$PATH_IN_REPO/}"
              mkdir -p $(dirname "$TARGET_PATH")

              # Replace symlink with fetched content
              echo "$FetchedContent" > "$TARGET_PATH"
            done

            # Remove the original symlink
            rm $SYMLINK_PATH
          done



      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
